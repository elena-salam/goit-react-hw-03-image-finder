{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","services/imagesApi.js","components/App.js","index.js"],"names":["Header","styled","header","Form","form","Button","button","ButtonLabel","span","Input","input","Searchbar","state","searchQuery","handleInputQuery","e","setState","target","value","handleFormSubmit","preventDefault","props","onSubmit","this","type","autocomplite","placeholder","onChange","Component","SpinnerContainer","div","Loader","color","height","width","timeout","GalleryItem","li","GalleryImage","img","ImageGalleryItem","image","alt","onOpenModal","src","onClick","GalleryList","ul","ImageGallery","images","onOpen","map","key","largeImageURL","webformatURL","tags","Backdrop","ModalWindow","CloseModal","Modal","handleEscPress","code","onClose","window","addEventListener","removeEventListener","children","perPage","axios","get","then","response","data","hits","Container","App","loading","largeImgRef","handleSearchQuery","query","fetchImages","imagesApi","prevState","handleOpenModal","imgRef","handleCloseModal","prevProps","length","dataLength","next","hasMore","loader","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81ff6630.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header` \r\ntop: 0; \r\nleft: 0; \r\nposition: sticky; \r\nz-index: 1100; \r\ndisplay: flex; \r\njustify-content: center; \r\nalign-items: center; \r\nmin-height: 64px; \r\npadding-right: 24px; \r\npadding-left: 24px; \r\npadding-top: 12px; \r\npadding-bottom: 12px; \r\ncolor: #fff; \r\nbackground-color: #3f51b5; \r\nbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), \r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst Form = styled.form` \r\ndisplay: flex; \r\nalign-items: center; \r\nwidth: 100%; \r\nmax-width: 600px; \r\nbackground-color: #fff; \r\nborder-radius: 3px; \r\noverflow: hidden;\r\n`;\r\n\r\nconst Button = styled.button` \r\ndisplay: inline-block; \r\nwidth: 48px; \r\nheight: 48px; \r\nborder: 0; \r\nbackground-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); \r\nbackground-size: 40%; \r\nbackground-repeat: no-repeat; \r\nbackground-position: center; \r\nopacity: 0.6; \r\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1); \r\ncursor: pointer; \r\noutline: none; \r\n&:hover { \r\n    opacity: 1; \r\n    }\r\n`;\r\nconst ButtonLabel = styled.span` \r\nposition: absolute; \r\nwidth: 1px; \r\nheight: 1px; \r\npadding: 0; \r\noverflow: hidden; \r\nclip: rect(0, 0, 0, 0); \r\nwhite-space: nowrap; \r\nclip-path: inset(50%); \r\nborder: 0;\r\n`;\r\n\r\nconst Input = styled.input` \r\ndisplay: inline-block; \r\nwidth: 100%; \r\nfont: inherit; \r\nfont-size: 20px; \r\nborder: none; \r\noutline: none; \r\npadding-left: 4px; \r\npadding-right: 4px; \r\n&::placeholder { \r\n    font: inherit; \r\n    font-size: 18px; \r\n    }\r\n`;\r\n\r\n\r\nexport default class Searchbar extends Component {\r\n    static propTypes ={\r\n        onsubmit:PropTypes.func,\r\n    }\r\n    state = {\r\n        searchQuery: '',\r\n    };\r\n\r\n    handleInputQuery = e => {\r\n        this.setState({searchQuery: e.target.value});\r\n    };\r\n    \r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.searchQuery);\r\n        this.setState({searchQuery: ''});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Header>\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <Button type=\"submit\">\r\n                        <ButtonLabel>Search</ButtonLabel>\r\n                    </Button>\r\n                    <Input type=\"text\" autocomplite=\"off\" placeholder=\"Search images\" \r\n                    value={this.state.searchQuery} onChange={this.handleInputQuery}/>\r\n                </Form>\r\n            </Header>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\nimport Spinner from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styled from 'styled-components';\r\n\r\nconst SpinnerContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-item: center;\r\n`;\r\n\r\nexport default class Loader extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <SpinnerContainer>\r\n          <Spinner\r\n            type=\"TailSpin\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} \r\n      />\r\n      </SpinnerContainer>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst GalleryItem = styled.li` \r\nborder-radius: 2px; \r\nbox-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), \r\n            0px 1px 1px 0px rgba(0, 0, 0, 0.14), \r\n            0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\nconst GalleryImage = styled.img` \r\nwidth: 100%; \r\nheight: 260px; \r\nobject-fit: cover; \r\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1); \r\n&:hover { \r\n    transform: scale(1.03); \r\n    cursor: zoom-in; }\r\n`;\r\n\r\nfunction ImageGalleryItem ({image, alt, onOpenModal}){\r\n    return(\r\n        <GalleryItem>\r\n            <GalleryImage src={image} alt={alt} onClick={onOpenModal}/>\r\n        </GalleryItem>\r\n    )\r\n}\r\nImageGalleryItem.propTypes={\r\n    image: PropTypes.string,\r\n    alt: PropTypes.string,\r\n    onOpenModal: PropTypes.func,\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst GalleryList = styled.ul` \r\ndisplay: grid; \r\nmax-width: calc(100vw - 48px); \r\ngrid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); \r\ngrid-gap: 16px; \r\nmargin-top: 0; \r\nmargin-bottom: 0; \r\npadding: 0; \r\nlist-style: none; \r\nmargin-left: auto; \r\nmargin-right: auto;\r\n`;\r\nfunction ImageGallery({ images, onOpen }) {\r\n  return (\r\n    <GalleryList>\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.largeImageURL}\r\n          image={image.webformatURL}\r\n          alt={image.tags}\r\n          onOpenModal ={() => onOpen(image.largeImageURL)}\r\n        />\r\n      ))}\r\n    </GalleryList>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes={\r\n    images: PropTypes.arrayOf(PropTypes.object),\r\n    onOpen: PropTypes.func\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst ModalWindow= styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  max-width: 900px;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\r\n    z-index: 2000;\r\n`;\r\n\r\nconst CloseModal = styled.span`\r\n  position: absolute;\r\n  font-size: 30px;\r\n  color: #fff;\r\n  right: 50px;\r\n  top: 85px;\r\n\r\n  &:hover{\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes={\r\n    onClose: PropTypes.func,\r\n  }\r\n  componentDidMount(){\r\n    window.addEventListener('keydown', this.handleEscPress)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.removeEventListener('keydown', this.handleEscPress);\r\n  }\r\n\r\n  handleEscPress = (e) =>{\r\n    if(e.code === 'Escape'){\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Backdrop onClick={this.props.onClose}>\r\n        <CloseModal onClick={this.props.onClose}>\r\n          {/* <i className=\"fas fa-times\"></i> */}\r\n        </CloseModal>\r\n        <ModalWindow>{this.props.children}</ModalWindow>\r\n      </Backdrop>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst fetchImagesWithQuery = (searchQuery, perPage=12) => {\r\n\r\n  return axios.get(\r\n  `https://pixabay.com/api/?q=${searchQuery}&page=1\r\n  &key=18108257-442a69c668d0345c031d8f80c&image_type=photo\r\n  &orientation=horizontal&per_page=${perPage}`,\r\n\r\n).then(response =>response.data.hits)\r\n \r\n}\r\nexport default {fetchImagesWithQuery};\r\n\r\n// return fetch (`https://pixabay.com/api/?q=${searchQuery}&page=${page}\r\n// &key=18108257-442a69c668d0345c031d8f80c&image_type=photo\r\n// &orientation=horizontal&per_page=12`).then (res => res.json())\r\n// .then (data => data.hits)\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport Loader from './Loader/Loader';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Modal from './Modal/Modal';\r\nimport styled from 'styled-components';\r\nimport imagesApi from '../services/imagesApi';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;\r\n\r\nexport default class App extends Component {\r\n  state = { \r\n    images: [], \r\n    loading: false, \r\n    perPage: 12, \r\n    searchQuery: '', \r\n    largeImgRef: null, \r\n    \r\n  }; \r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.searchQuery; \r\n    const nextQuery = this.state.searchQuery; \r\n    if (prevQuery !== nextQuery) {\r\n       this.setState({ images: [], perPage: 12 }); \r\n       \r\n       this.fetchImages(); \r\n      } \r\n    } \r\n    \r\n    handleSearchQuery = query => { \r\n      this.setState({ searchQuery: query }); \r\n    }; \r\n    \r\n    fetchImages = () => { \r\n      const { searchQuery, perPage } = this.state; \r\n      imagesApi.fetchImagesWithQuery(searchQuery, perPage)\r\n      .then(images => this.setState(prevState => ({\r\n         images: [ ...prevState.images, ...images], perPage: prevState.perPage + 12, \r\n        })), \r\n      )\r\n      \r\n    }; \r\n      \r\n      handleOpenModal = imgRef => { \r\n        this.setState({ largeImgRef: imgRef }); \r\n      }; \r\n      \r\n      handleCloseModal = () => { \r\n        this.setState({ largeImgRef: null });\r\n      };\r\n\r\n      render() { \r\n        const { images, largeImgRef, loading } = this.state; \r\n        return ( \r\n        <Container> \r\n          <Searchbar onSubmit={this.handleSearchQuery} /> \r\n          \r\n          {loading && <Loader/>}\r\n          {images.length > 0 && ( \r\n            <InfiniteScroll \r\n              dataLength={images.length} \r\n              next={this.fetchImages} \r\n              hasMore={true} \r\n              loader={<Loader />} > \r\n                <ImageGallery images={images} \r\n                  onOpen={this.handleOpenModal} /> \r\n            </InfiniteScroll> \r\n          )} \r\n          {largeImgRef && ( \r\n          <Modal onClose={this.handleCloseModal}> \r\n            <img src={largeImgRef} alt=\"\" width='900' /> \r\n          </Modal> )} \r\n        </Container> ); \r\n      }\r\n    }\r\n\r\n// window.scrollTo({\r\n//   top: document.documentElement.scrollHeight,\r\n//   left: 0,\r\n//   behavior: 'smooth',\r\n// });\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\nimport './base.css';\n\nReactDOM.render(\n \n    <App />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}